name: Backend API Tests

on:
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  test:
    name: Run Jest Tests
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start MongoDB container
        run: |
          # Stop any existing MongoDB container
          docker stop test-mongodb || true
          docker rm test-mongodb || true
          
          # Start MongoDB container
          docker run -d \
            --name test-mongodb \
            -p 27017:27017 \
            mongo:latest
          
          # Wait for MongoDB to be ready
          echo "Waiting for MongoDB to start..."
          for i in {1..60}; do
            if docker exec test-mongodb mongosh --eval "db.runCommand('ping')" > /dev/null 2>&1; then
              echo "MongoDB is ready!"
              break
            elif docker exec test-mongodb mongo --eval "db.runCommand('ping')" > /dev/null 2>&1; then
              echo "MongoDB is ready!"
              break
            elif nc -z localhost 27017; then
              echo "MongoDB port is open, checking connection..."
              if timeout 5 bash -c "</dev/tcp/localhost/27017"; then
                echo "MongoDB is ready!"
                break
              fi
            fi
            echo "Waiting for MongoDB... ($i/60)"
            sleep 2
          done
          
          # Final check
          if ! nc -z localhost 27017; then
            echo "MongoDB failed to start!"
            docker logs test-mongodb
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Backend/API/package.json

      - name: Install dependencies
        working-directory: Backend/API
        run: npm install

      - name: Run Jest tests
        working-directory: Backend/API
        run: npx jest --forceExit
        env:
          # Set up MongoDB connection for tests
          MONGO_URI: mongodb://localhost:27017/Superlap_test

      - name: Cleanup MongoDB container
        if: always()
        run: |
          docker stop test-mongodb || true
          docker rm test-mongodb || true
